{"version":3,"sources":["App.tsx","utils/stringToNumber.utils.ts","stores/savedWords.slice.ts","stores/store.ts","resources/chemicalElements.ts","utils/chemicalElements.utils.ts","components/StringToNumberSection/StringToNumberSummary.tsx","components/StringToNumberSection/StringToNumberSection.tsx","components/FavoriteSection/FavoriteSection.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["View","StringToNumberUtils","value","total","models","split","map","word","number","stringToNumber","label","filter","model","upperCase","toUpperCase","charIndex","length","charCode","charCodeAt","LOCAL_STORAGE_KEY","initialState","JSON","parse","localStorage","getItem","savedWordsSlice","createSlice","name","reducers","saveWord","state","action","payload","getModels","wordArray","dictionary","includes","setItem","stringify","removeWord","newWordArray","element","SavedWordsActions","actions","SavedWordsSelectors","savedWords","SavedWordsReducer","reducer","store","configureStore","chemicalElements","ChemicalElementsUtils","undefined","StringToNumberSummaryBase","this","props","words","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","renderNumbers","renderTotal","labelSet","Set","modelsToUse","forEach","has","push","add","renderRow","chemicalElement","getChemicalElement","relatedSavedWords","linkedWords","el","join","canSave","scope","symbol","renderSaveButton","Button","color","onClick","PureComponent","mapDispatch","StringToNumberSummary","connect","connector","StringToNumberSection","onInputChange","event","setState","target","TextField","className","onChange","FavoriteSectionBase","renderRows","favorites","Object","keys","key","renderRemoveButton","FavoriteSection","getValueFromEnum","enumValue","FAVORITES","App","useState","SEARCH","view","setView","RadioGroup","row","aria-label","getEnumFromValue","FormControlLabel","control","Radio","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.08276c44.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport {store} from './stores/store'\nimport './App.css';\nimport { StringToNumberSection } from './components/StringToNumberSection/StringToNumberSection';\nimport { FavoriteSection } from './components/FavoriteSection/FavoriteSection';\nimport { FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\n\nenum View {\n  SEARCH, FAVORITES\n}\n\nconst getEnumFromValue = (value: string) => {\n  switch(value) {\n    case 'favorites': {\n      return View.FAVORITES;\n    }\n    default: {\n      return View.SEARCH;\n    }\n  }\n}\n\nconst getValueFromEnum = (enumValue: View) => {\n  switch(enumValue) {\n    case View.FAVORITES: {\n      return 'favorites';\n    }\n    default: {\n      return 'search';\n    }\n  }\n}\n\nfunction App() {\n  const [view, setView] = useState(View.SEARCH);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>, value: any) => {\n    setView(getEnumFromValue(value));\n  };\n\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <div className=\"mode\">\n          <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={getValueFromEnum(view)} onChange={handleChange}>\n            <FormControlLabel value=\"search\" control={<Radio />} label=\"Recherche\" />\n            <FormControlLabel value=\"favorites\" control={<Radio />} label=\"Gestion des favoris\" />\n          </RadioGroup>\n        </div>\n        {view === View.SEARCH && <StringToNumberSection />}\n        {view === View.FAVORITES && <FavoriteSection />}\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import {StringToNumberModels} from '../interfaces/stringToNumber.interfaces'\n\n\nconst A_ASCII_CODE = 65;\nconst Z_ASCII_CODE = 90;\n\nexport class StringToNumberUtils {\n    public static getModels(value: string): StringToNumberModels {\n        let total = 0;\n        const models = value.split(' ').map((word) => {\n            const number = this.stringToNumber(word);\n            total += number;\n            return {label: word, number};\n        }).filter((model) => model.number > 0);\n        return {\n            total,\n            models,\n            word: value\n        }\n    }\n\n    public static stringToNumber(value: string): number {\n        let number: number = 0; \n    \n        const upperCase = value.toUpperCase();\n        for (let charIndex = 0; charIndex < upperCase.length; charIndex++) {\n            const charCode = upperCase.charCodeAt(charIndex);\n            if (charCode >= A_ASCII_CODE && charCode <= Z_ASCII_CODE) {\n                number += charCode - A_ASCII_CODE + 1;\n            }\n        }\n        \n        return number;\n    }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { StringToNumberUtils } from '../utils/stringToNumber.utils';\nimport { RootState } from './store';\n\n// Define a type for the slice state\ninterface SavedWordsState {\n  dictionary: {[key: number]: string[]}\n}\n\n// Define the initial state using that type\nconst LOCAL_STORAGE_KEY = 'savedWords';\nconst initialState: SavedWordsState = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY) || \"{\\\"dictionary\\\":{}}\");\n\ntype SaveWordPayload = string;\ntype RemoveWordPayload = string;\n\nexport const savedWordsSlice = createSlice({\n  name: 'savedWords',\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  reducers: {\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    saveWord: (state, action: PayloadAction<SaveWordPayload>) => {\n        const word = action.payload;\n        const models = StringToNumberUtils.getModels(word);\n        let wordArray = state.dictionary[models.total] || [];\n        if (!wordArray.includes(word)) {\n            wordArray = [...wordArray, word];\n            state.dictionary = {...state.dictionary, [models.total]: wordArray};\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state));\n        }\n    },\n    removeWord: (state, action: PayloadAction<RemoveWordPayload>) => {\n        const word = action.payload;\n        const models = StringToNumberUtils.getModels(word);\n        let wordArray: string[] = state.dictionary[models.total] || [];\n        const newWordArray = wordArray.filter((element) => element !== word);\n        if (newWordArray !== wordArray) {\n            state.dictionary = {...state.dictionary, [models.total]: newWordArray};\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state));\n        }\n      },\n  },\n})\n\nexport const SavedWordsActions = savedWordsSlice.actions\n\nconst selectSavedWords = (state: RootState) => state.savedWords.dictionary;\nexport const SavedWordsSelectors = {\n    selectSavedWords\n}\n\nexport const SavedWordsReducer = savedWordsSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport { SavedWordsReducer } from './savedWords.slice'\n\nexport const store = configureStore({\n  reducer: {\n    savedWords: SavedWordsReducer\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","/**\nGenerated with the following script applied on https://en.wikipedia.org/wiki/List_of_chemical_elements\n\nvar elements = [];\nfor (let index = 0; index <$0.children.length; index++) {\n  const tds = document.querySelector('table tbody').children[index].querySelectorAll('td');\n  if (tds.length > 3) elements.push({number: Number(tds[0].textContent), name: tds[2].textContent, symbol: tds[1].textContent})\n}\n// Copy result in clipboard => use ctrl-v to paste the result\ncopy(elements)\n */\n\nexport interface ChemicalElement {\n    number: number,\n    name: string,\n    symbol: string\n}\n\nexport const chemicalElements: ChemicalElement[] = [\n    {\n        \"number\": 1,\n        \"name\": \"Hydrogen\",\n        \"symbol\": \"H\"\n    },\n    {\n        \"number\": 2,\n        \"name\": \"Helium\",\n        \"symbol\": \"He\"\n    },\n    {\n        \"number\": 3,\n        \"name\": \"Lithium\",\n        \"symbol\": \"Li\"\n    },\n    {\n        \"number\": 4,\n        \"name\": \"Beryllium\",\n        \"symbol\": \"Be\"\n    },\n    {\n        \"number\": 5,\n        \"name\": \"Boron\",\n        \"symbol\": \"B\"\n    },\n    {\n        \"number\": 6,\n        \"name\": \"Carbon\",\n        \"symbol\": \"C\"\n    },\n    {\n        \"number\": 7,\n        \"name\": \"Nitrogen\",\n        \"symbol\": \"N\"\n    },\n    {\n        \"number\": 8,\n        \"name\": \"Oxygen\",\n        \"symbol\": \"O\"\n    },\n    {\n        \"number\": 9,\n        \"name\": \"Fluorine\",\n        \"symbol\": \"F\"\n    },\n    {\n        \"number\": 10,\n        \"name\": \"Neon\",\n        \"symbol\": \"Ne\"\n    },\n    {\n        \"number\": 11,\n        \"name\": \"Sodium\",\n        \"symbol\": \"Na\"\n    },\n    {\n        \"number\": 12,\n        \"name\": \"Magnesium\",\n        \"symbol\": \"Mg\"\n    },\n    {\n        \"number\": 13,\n        \"name\": \"Aluminium\",\n        \"symbol\": \"Al\"\n    },\n    {\n        \"number\": 14,\n        \"name\": \"Silicon\",\n        \"symbol\": \"Si\"\n    },\n    {\n        \"number\": 15,\n        \"name\": \"Phosphorus\",\n        \"symbol\": \"P\"\n    },\n    {\n        \"number\": 16,\n        \"name\": \"Sulfur\",\n        \"symbol\": \"S\"\n    },\n    {\n        \"number\": 17,\n        \"name\": \"Chlorine\",\n        \"symbol\": \"Cl\"\n    },\n    {\n        \"number\": 18,\n        \"name\": \"Argon\",\n        \"symbol\": \"Ar\"\n    },\n    {\n        \"number\": 19,\n        \"name\": \"Potassium\",\n        \"symbol\": \"K\"\n    },\n    {\n        \"number\": 20,\n        \"name\": \"Calcium\",\n        \"symbol\": \"Ca\"\n    },\n    {\n        \"number\": 21,\n        \"name\": \"Scandium\",\n        \"symbol\": \"Sc\"\n    },\n    {\n        \"number\": 22,\n        \"name\": \"Titanium\",\n        \"symbol\": \"Ti\"\n    },\n    {\n        \"number\": 23,\n        \"name\": \"Vanadium\",\n        \"symbol\": \"V\"\n    },\n    {\n        \"number\": 24,\n        \"name\": \"Chromium\",\n        \"symbol\": \"Cr\"\n    },\n    {\n        \"number\": 25,\n        \"name\": \"Manganese\",\n        \"symbol\": \"Mn\"\n    },\n    {\n        \"number\": 26,\n        \"name\": \"Iron\",\n        \"symbol\": \"Fe\"\n    },\n    {\n        \"number\": 27,\n        \"name\": \"Cobalt\",\n        \"symbol\": \"Co\"\n    },\n    {\n        \"number\": 28,\n        \"name\": \"Nickel\",\n        \"symbol\": \"Ni\"\n    },\n    {\n        \"number\": 29,\n        \"name\": \"Copper\",\n        \"symbol\": \"Cu\"\n    },\n    {\n        \"number\": 30,\n        \"name\": \"Zinc\",\n        \"symbol\": \"Zn\"\n    },\n    {\n        \"number\": 31,\n        \"name\": \"Gallium\",\n        \"symbol\": \"Ga\"\n    },\n    {\n        \"number\": 32,\n        \"name\": \"Germanium\",\n        \"symbol\": \"Ge\"\n    },\n    {\n        \"number\": 33,\n        \"name\": \"Arsenic\",\n        \"symbol\": \"As\"\n    },\n    {\n        \"number\": 34,\n        \"name\": \"Selenium\",\n        \"symbol\": \"Se\"\n    },\n    {\n        \"number\": 35,\n        \"name\": \"Bromine\",\n        \"symbol\": \"Br\"\n    },\n    {\n        \"number\": 36,\n        \"name\": \"Krypton\",\n        \"symbol\": \"Kr\"\n    },\n    {\n        \"number\": 37,\n        \"name\": \"Rubidium\",\n        \"symbol\": \"Rb\"\n    },\n    {\n        \"number\": 38,\n        \"name\": \"Strontium\",\n        \"symbol\": \"Sr\"\n    },\n    {\n        \"number\": 39,\n        \"name\": \"Yttrium\",\n        \"symbol\": \"Y\"\n    },\n    {\n        \"number\": 40,\n        \"name\": \"Zirconium\",\n        \"symbol\": \"Zr\"\n    },\n    {\n        \"number\": 41,\n        \"name\": \"Niobium\",\n        \"symbol\": \"Nb\"\n    },\n    {\n        \"number\": 42,\n        \"name\": \"Molybdenum\",\n        \"symbol\": \"Mo\"\n    },\n    {\n        \"number\": 43,\n        \"name\": \"Technetium\",\n        \"symbol\": \"Tc\"\n    },\n    {\n        \"number\": 44,\n        \"name\": \"Ruthenium\",\n        \"symbol\": \"Ru\"\n    },\n    {\n        \"number\": 45,\n        \"name\": \"Rhodium\",\n        \"symbol\": \"Rh\"\n    },\n    {\n        \"number\": 46,\n        \"name\": \"Palladium\",\n        \"symbol\": \"Pd\"\n    },\n    {\n        \"number\": 47,\n        \"name\": \"Silver\",\n        \"symbol\": \"Ag\"\n    },\n    {\n        \"number\": 48,\n        \"name\": \"Cadmium\",\n        \"symbol\": \"Cd\"\n    },\n    {\n        \"number\": 49,\n        \"name\": \"Indium\",\n        \"symbol\": \"In\"\n    },\n    {\n        \"number\": 50,\n        \"name\": \"Tin\",\n        \"symbol\": \"Sn\"\n    },\n    {\n        \"number\": 51,\n        \"name\": \"Antimony\",\n        \"symbol\": \"Sb\"\n    },\n    {\n        \"number\": 52,\n        \"name\": \"Tellurium\",\n        \"symbol\": \"Te\"\n    },\n    {\n        \"number\": 53,\n        \"name\": \"Iodine\",\n        \"symbol\": \"I\"\n    },\n    {\n        \"number\": 54,\n        \"name\": \"Xenon\",\n        \"symbol\": \"Xe\"\n    },\n    {\n        \"number\": 55,\n        \"name\": \"Caesium\",\n        \"symbol\": \"Cs\"\n    },\n    {\n        \"number\": 56,\n        \"name\": \"Barium\",\n        \"symbol\": \"Ba\"\n    },\n    {\n        \"number\": 57,\n        \"name\": \"Lanthanum\",\n        \"symbol\": \"La\"\n    },\n    {\n        \"number\": 58,\n        \"name\": \"Cerium\",\n        \"symbol\": \"Ce\"\n    },\n    {\n        \"number\": 59,\n        \"name\": \"Praseodymium\",\n        \"symbol\": \"Pr\"\n    },\n    {\n        \"number\": 60,\n        \"name\": \"Neodymium\",\n        \"symbol\": \"Nd\"\n    },\n    {\n        \"number\": 61,\n        \"name\": \"Promethium\",\n        \"symbol\": \"Pm\"\n    },\n    {\n        \"number\": 62,\n        \"name\": \"Samarium\",\n        \"symbol\": \"Sm\"\n    },\n    {\n        \"number\": 63,\n        \"name\": \"Europium\",\n        \"symbol\": \"Eu\"\n    },\n    {\n        \"number\": 64,\n        \"name\": \"Gadolinium\",\n        \"symbol\": \"Gd\"\n    },\n    {\n        \"number\": 65,\n        \"name\": \"Terbium\",\n        \"symbol\": \"Tb\"\n    },\n    {\n        \"number\": 66,\n        \"name\": \"Dysprosium\",\n        \"symbol\": \"Dy\"\n    },\n    {\n        \"number\": 67,\n        \"name\": \"Holmium\",\n        \"symbol\": \"Ho\"\n    },\n    {\n        \"number\": 68,\n        \"name\": \"Erbium\",\n        \"symbol\": \"Er\"\n    },\n    {\n        \"number\": 69,\n        \"name\": \"Thulium\",\n        \"symbol\": \"Tm\"\n    },\n    {\n        \"number\": 70,\n        \"name\": \"Ytterbium\",\n        \"symbol\": \"Yb\"\n    },\n    {\n        \"number\": 71,\n        \"name\": \"Lutetium\",\n        \"symbol\": \"Lu\"\n    },\n    {\n        \"number\": 72,\n        \"name\": \"Hafnium\",\n        \"symbol\": \"Hf\"\n    },\n    {\n        \"number\": 73,\n        \"name\": \"Tantalum\",\n        \"symbol\": \"Ta\"\n    },\n    {\n        \"number\": 74,\n        \"name\": \"Tungsten\",\n        \"symbol\": \"W\"\n    },\n    {\n        \"number\": 75,\n        \"name\": \"Rhenium\",\n        \"symbol\": \"Re\"\n    },\n    {\n        \"number\": 76,\n        \"name\": \"Osmium\",\n        \"symbol\": \"Os\"\n    },\n    {\n        \"number\": 77,\n        \"name\": \"Iridium\",\n        \"symbol\": \"Ir\"\n    },\n    {\n        \"number\": 78,\n        \"name\": \"Platinum\",\n        \"symbol\": \"Pt\"\n    },\n    {\n        \"number\": 79,\n        \"name\": \"Gold\",\n        \"symbol\": \"Au\"\n    },\n    {\n        \"number\": 80,\n        \"name\": \"Mercury\",\n        \"symbol\": \"Hg\"\n    },\n    {\n        \"number\": 81,\n        \"name\": \"Thallium\",\n        \"symbol\": \"Tl\"\n    },\n    {\n        \"number\": 82,\n        \"name\": \"Lead\",\n        \"symbol\": \"Pb\"\n    },\n    {\n        \"number\": 83,\n        \"name\": \"Bismuth\",\n        \"symbol\": \"Bi\"\n    },\n    {\n        \"number\": 84,\n        \"name\": \"Polonium\",\n        \"symbol\": \"Po\"\n    },\n    {\n        \"number\": 85,\n        \"name\": \"Astatine\",\n        \"symbol\": \"At\"\n    },\n    {\n        \"number\": 86,\n        \"name\": \"Radon\",\n        \"symbol\": \"Rn\"\n    },\n    {\n        \"number\": 87,\n        \"name\": \"Francium\",\n        \"symbol\": \"Fr\"\n    },\n    {\n        \"number\": 88,\n        \"name\": \"Radium\",\n        \"symbol\": \"Ra\"\n    },\n    {\n        \"number\": 89,\n        \"name\": \"Actinium\",\n        \"symbol\": \"Ac\"\n    },\n    {\n        \"number\": 90,\n        \"name\": \"Thorium\",\n        \"symbol\": \"Th\"\n    },\n    {\n        \"number\": 91,\n        \"name\": \"Protactinium\",\n        \"symbol\": \"Pa\"\n    },\n    {\n        \"number\": 92,\n        \"name\": \"Uranium\",\n        \"symbol\": \"U\"\n    },\n    {\n        \"number\": 93,\n        \"name\": \"Neptunium\",\n        \"symbol\": \"Np\"\n    },\n    {\n        \"number\": 94,\n        \"name\": \"Plutonium\",\n        \"symbol\": \"Pu\"\n    },\n    {\n        \"number\": 95,\n        \"name\": \"Americium\",\n        \"symbol\": \"Am\"\n    },\n    {\n        \"number\": 96,\n        \"name\": \"Curium\",\n        \"symbol\": \"Cm\"\n    },\n    {\n        \"number\": 97,\n        \"name\": \"Berkelium\",\n        \"symbol\": \"Bk\"\n    },\n    {\n        \"number\": 98,\n        \"name\": \"Californium\",\n        \"symbol\": \"Cf\"\n    },\n    {\n        \"number\": 99,\n        \"name\": \"Einsteinium\",\n        \"symbol\": \"Es\"\n    },\n    {\n        \"number\": 100,\n        \"name\": \"Fermium\",\n        \"symbol\": \"Fm\"\n    },\n    {\n        \"number\": 101,\n        \"name\": \"Mendelevium\",\n        \"symbol\": \"Md\"\n    },\n    {\n        \"number\": 102,\n        \"name\": \"Nobelium\",\n        \"symbol\": \"No\"\n    },\n    {\n        \"number\": 103,\n        \"name\": \"Lawrencium\",\n        \"symbol\": \"Lr\"\n    },\n    {\n        \"number\": 104,\n        \"name\": \"Rutherfordium\",\n        \"symbol\": \"Rf\"\n    },\n    {\n        \"number\": 105,\n        \"name\": \"Dubnium\",\n        \"symbol\": \"Db\"\n    },\n    {\n        \"number\": 106,\n        \"name\": \"Seaborgium\",\n        \"symbol\": \"Sg\"\n    },\n    {\n        \"number\": 107,\n        \"name\": \"Bohrium\",\n        \"symbol\": \"Bh\"\n    },\n    {\n        \"number\": 108,\n        \"name\": \"Hassium\",\n        \"symbol\": \"Hs\"\n    },\n    {\n        \"number\": 109,\n        \"name\": \"Meitnerium\",\n        \"symbol\": \"Mt\"\n    },\n    {\n        \"number\": 110,\n        \"name\": \"Darmstadtium\",\n        \"symbol\": \"Ds\"\n    },\n    {\n        \"number\": 111,\n        \"name\": \"Roentgenium\",\n        \"symbol\": \"Rg\"\n    },\n    {\n        \"number\": 112,\n        \"name\": \"Copernicium\",\n        \"symbol\": \"Cn\"\n    },\n    {\n        \"number\": 113,\n        \"name\": \"Nihonium\",\n        \"symbol\": \"Nh\"\n    },\n    {\n        \"number\": 114,\n        \"name\": \"Flerovium\",\n        \"symbol\": \"Fl\"\n    },\n    {\n        \"number\": 115,\n        \"name\": \"Moscovium\",\n        \"symbol\": \"Mc\"\n    },\n    {\n        \"number\": 116,\n        \"name\": \"Livermorium\",\n        \"symbol\": \"Lv\"\n    },\n    {\n        \"number\": 117,\n        \"name\": \"Tennessine\",\n        \"symbol\": \"Ts\"\n    },\n    {\n        \"number\": 118,\n        \"name\": \"Oganesson\",\n        \"symbol\": \"Og\"\n    }\n]","import {ChemicalElement, chemicalElements} from '../resources/chemicalElements';\n\nexport class ChemicalElementsUtils {\n    public static getChemicalElement(number: number): ChemicalElement | undefined {\n        if (number  < 1) return undefined; \n        const element = chemicalElements[number - 1];\n        return !!element ? element : undefined;\n    }\n}\n","import { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport React, { PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { StringToNumberModel } from \"../../interfaces/stringToNumber.interfaces\";\nimport { SavedWordsActions, SavedWordsSelectors } from \"../../stores/savedWords.slice\";\nimport { RootState } from \"../../stores/store\";\nimport { StringToNumberUtils } from \"../../utils/stringToNumber.utils\";\nimport { ChemicalElementsUtils} from '../../utils/chemicalElements.utils';\n\ninterface StringToNumberSummaryProps extends PropsFromRedux {\n    words: string\n}\n\nexport class StringToNumberSummaryBase extends PureComponent<StringToNumberSummaryProps> {\n    public render() {\n        const models = StringToNumberUtils.getModels(this.props.words)\n        return <TableContainer component={Paper}>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>Mot</TableCell>\n                    <TableCell>Nombre</TableCell>\n                    <TableCell>Element</TableCell>\n                    <TableCell>Mots favoris similaires</TableCell>\n                    <TableCell>Ajouter aux favoris</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n            {this.renderNumbers(models.models)}\n            {models.models.length > 1 && this.renderTotal(models.word, models.total)}\n            </TableBody>\n        </Table>\n        </TableContainer>\n    }\n\n    private renderNumbers(models: StringToNumberModel[]) {\n        const labelSet = new Set<string>();\n        const modelsToUse: StringToNumberModel[] = [];\n        models.forEach((model: StringToNumberModel) => {\n            if (!labelSet.has(model.label)) {\n                modelsToUse.push(model);\n                labelSet.add(model.label);\n            }\n        })\n        return modelsToUse.map((model) => \n            this.renderRow(model.label, model.number)\n        );\n    }\n\n    private renderTotal(words: string, total: number) {\n        return this.renderRow(words, total);\n    }\n\n    private renderRow(label: string, number: number) {\n        const chemicalElement = ChemicalElementsUtils.getChemicalElement(number);\n        const relatedSavedWords = this.props.savedWords?.[number] || [];\n        const linkedWords = relatedSavedWords.filter((el) => el !== label).join(', ');\n        const canSave = !relatedSavedWords.includes(label);\n        return <TableRow key={label}>\n            <TableCell component=\"th\" scope=\"row\">{label}</TableCell>\n            <TableCell>{number}</TableCell>\n            <TableCell>{!!chemicalElement ? `${chemicalElement.name} (${chemicalElement.symbol})` : ''}</TableCell>\n            <TableCell>{linkedWords}</TableCell>\n            <TableCell>{canSave ? this.renderSaveButton(label):''}</TableCell>\n        </TableRow>\n    }\n\n    private renderSaveButton(label: string) {\n        return <Button color=\"primary\" onClick={() => this.props.saveWord(label)}>Ajouter aux favoris</Button>\n    }\n}\n\nconst mapState = (state: RootState) => ({\n    savedWords: SavedWordsSelectors.selectSavedWords(state),\n})\n\nconst mapDispatch = SavedWordsActions;\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\n\nexport const StringToNumberSummary = connector(StringToNumberSummaryBase);","import React, { ChangeEvent, PureComponent } from 'react';\nimport {TextField} from '@material-ui/core';\nimport { StringToNumberSummary } from './StringToNumberSummary';\n\n\ninterface StringToNumberSectionProps {\n\n}\n\ninterface StringToNumberSectionState {\n    words: string\n}\n\nexport class StringToNumberSection extends PureComponent<StringToNumberSectionProps, StringToNumberSectionState> {\n\n    constructor(props: StringToNumberSectionProps) {\n        super(props);\n        this.state = {\n            words: ''\n        }\n    }\n\n    public render() {\n        return (<>\n            <TextField className=\"search-input\" label=\"Recherche de mots\" onChange={this.onInputChange} />\n            <StringToNumberSummary words={this.state.words}/>\n        </>);\n    }\n\n    private onInputChange = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        this.setState({\n            words: event.target.value\n        });\n    }\n}","import React, { PureComponent } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { SavedWordsActions, SavedWordsSelectors } from \"../../stores/savedWords.slice\";\nimport { RootState } from \"../../stores/store\";\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport { ChemicalElementsUtils } from \"../../utils/chemicalElements.utils\";\nimport { StringToNumberModel } from \"../../interfaces/stringToNumber.interfaces\";\nimport { StringToNumberUtils } from \"../../utils/stringToNumber.utils\";\n\ninterface FavoriteProps extends PropsFromRedux {\n\n}\n\nclass FavoriteSectionBase extends PureComponent<FavoriteProps> {\n    public render() {\n        return <> \n        <TableContainer component={Paper}>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>Mot</TableCell>\n                    <TableCell>Nombre</TableCell>\n                    <TableCell>Element</TableCell>\n                    <TableCell>Supprimer des favoris</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n            {this.renderRows()}\n            </TableBody>\n        </Table>\n        </TableContainer>\n        </>\n    }\n\n    private renderRows() {\n        const favorites: StringToNumberModel[] = [];\n        Object.keys(this.props.savedWords).forEach((key: any) => {\n            const array = this.props.savedWords[key];\n            array.forEach((el: string) => {\n                const models = StringToNumberUtils.getModels(el);\n                favorites.push({label: models.word, number: models.total});\n            });\n        });\n        return favorites.map((model) => this.renderRow(model.label, model.number));\n    }\n\n    private renderRow(label: string, number: number) {\n        const chemicalElement = ChemicalElementsUtils.getChemicalElement(number);\n        const relatedSavedWords = this.props.savedWords?.[number] || [];\n        const linkedWords = relatedSavedWords.filter((el) => el !== label).join(', ');\n        return <TableRow key={label}>\n            <TableCell component=\"th\" scope=\"row\">{label}</TableCell>\n            <TableCell>{number}</TableCell>\n            <TableCell>{!!chemicalElement ? `${chemicalElement.name} (${chemicalElement.symbol})` : ''}</TableCell>\n            <TableCell>{this.renderRemoveButton(label)}</TableCell>\n        </TableRow>\n    }\n\n    private renderRemoveButton(label: string) {\n        return <Button color=\"primary\" onClick={() => this.props.removeWord(label)}>Supprimer des favoris</Button>\n    }\n}\n\nconst mapState = (state: RootState) => ({\n    savedWords: SavedWordsSelectors.selectSavedWords(state),\n})\n\nconst mapDispatch = SavedWordsActions;\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\n\nexport const FavoriteSection = connector(FavoriteSectionBase);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}